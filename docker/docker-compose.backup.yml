version: "3.8"

services:
  backup:
    image: offen/docker-volume-backup:v2
    container_name: supabase-backup
    restart: unless-stopped
    #env_file:
      # - ./backup.env                   # если шифруете Restic-репозиторий
    volumes:
      # ---------- данные Postgres ---------------------------------
      - ./volumes/db/data:/backup/db_data:ro
      # ---------- файлы bucket-ов Storage -------------------------
      - ./volumes/storage:/backup/storage:ro
      # ---------- pgsodium-key (named-volume из основного compose)
      - db-config:/backup/db-config:ro
      # ---------- ежедневные pg_dump-ы ----------------------------
      - supabase_dumps:/backup/dumps:ro

      # ---------- ВЕСЬ ПРОЕКТ (папка supabase/) -------------------
      - ../:/backup/project:ro        # «../» потому что compose лежит в docker/

      # ---------- куда складываем архивы --------------------------
      - ../local_backups:/archive     # положит архивы рядом с docker/

      # нужно, чтобы backup мог секундно останавливать БД
      - /var/run/docker.sock:/var/run/docker.sock:ro

    # исключаем саму папку бэкапов, .git и node_modules
    command: >
      schedule
      --exclude "/backup/project/local_backups/**"
      --exclude "/backup/project/.git/**"
      --exclude "/backup/project/node_modules/**"
      --schedule "0 3 * * *"
      --full-if-older-than 7d
      --prune "keep-last 14"

  # логический дамп Postgres раз в сутки
  supabase-dump:
    image: postgres:16-alpine
    container_name: supabase-dump
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    entrypoint: ["/bin/sh","-c"]
    command: |
      while true; do
        pg_dump -Fc -h db -U postgres -d ${POSTGRES_DB} \
          > /dumps/$(date +%F_%H%M)_supabase.pg_dump && \
        sleep 24h;
      done
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - supabase_dumps:/dumps

volumes:
  db-config:
  supabase_dumps:
